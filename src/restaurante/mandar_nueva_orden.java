/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurante;


import clases.Ticket_nueva_orden;
import clases.conectate;
import clases.sqlclass;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class mandar_nueva_orden extends javax.swing.JDialog {

    //public static String num_comensales_global, nombre_cliente_global, id_clientes, id_empleado, cargo_trabajador, nombre_trabajador;
    boolean selecciono_clientes = false, like_nombre = false;
    conectate conexion = new conectate();
//    principal aux = new principal();
    //private Keyboard keyboard;
    sqlclass funcion = new sqlclass();
    Ticket_nueva_orden vaucher2 = new Ticket_nueva_orden();
    Object[][] dtconduc;
    Object[] obj;
    String hora_sistema,fecha_sistema;

    /**
     * Creates new form input_orden
     */
    public mandar_nueva_orden(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //Jbtn_quitar.setEnabled(false);
        //Jbtn_resta.setEnabled(false);
        //Jbtn_suma.setEnabled(false);
        formato_tabla_venta();
        this.setLocationRelativeTo(null);

        //formato_tabla_venta();
        //llenar_tabla();
        compara_arreglos();
        Jbtn_llenar_tabla.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane18 = new javax.swing.JScrollPane();
        tabla_orden = new javax.swing.JTable(){public boolean isCellEditable(int rowIndex,int colIndex){return false;}};
        jPanel2 = new javax.swing.JPanel();
        Jbtn_generar_ticket = new javax.swing.JButton();
        Jbtn_quitar = new javax.swing.JButton();
        Jbtn_suma = new javax.swing.JButton();
        Jbtn_resta = new javax.swing.JButton();
        Jbtn_llenar_tabla = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla_orden.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tabla_orden.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla_orden.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_ordenMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tabla_ordenMouseEntered(evt);
            }
        });
        tabla_orden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabla_ordenKeyPressed(evt);
            }
        });
        jScrollPane18.setViewportView(tabla_orden);

        jPanel1.add(jScrollPane18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 490, 220));

        Jbtn_generar_ticket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cash-register-icon_2.png"))); // NOI18N
        Jbtn_generar_ticket.setToolTipText("Generar ticket");
        Jbtn_generar_ticket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Jbtn_generar_ticketActionPerformed(evt);
            }
        });

        Jbtn_quitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/remove-from-database-icon.png"))); // NOI18N
        Jbtn_quitar.setToolTipText("Quitar elemento");
        Jbtn_quitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Jbtn_quitarActionPerformed(evt);
            }
        });

        Jbtn_suma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/document-add-icon.png"))); // NOI18N
        Jbtn_suma.setToolTipText("Sumar cantidad");
        Jbtn_suma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Jbtn_sumaActionPerformed(evt);
            }
        });

        Jbtn_resta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/document-remove-icon.png"))); // NOI18N
        Jbtn_resta.setToolTipText("Resta cantidad");
        Jbtn_resta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Jbtn_restaActionPerformed(evt);
            }
        });

        Jbtn_llenar_tabla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/reload-icon.png"))); // NOI18N
        Jbtn_llenar_tabla.setToolTipText("LLena la tabla");
        Jbtn_llenar_tabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Jbtn_llenar_tablaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Jbtn_llenar_tabla, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(Jbtn_quitar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Jbtn_suma, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Jbtn_resta, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Jbtn_generar_ticket, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Jbtn_resta, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(Jbtn_generar_ticket, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(Jbtn_quitar, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(Jbtn_suma, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(Jbtn_llenar_tabla, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel1.setText("CONFIRMA LA ORDEN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(28, 28, 28)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabla_ordenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_ordenMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_tabla_ordenMouseClicked

    private void tabla_ordenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_ordenKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tabla_ordenKeyPressed

    private void tabla_ordenMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_ordenMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tabla_ordenMouseEntered

    private void Jbtn_generar_ticketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Jbtn_generar_ticketActionPerformed
        // TODO add your handling code here:
        mandar_ticket();
        this.dispose();
    }//GEN-LAST:event_Jbtn_generar_ticketActionPerformed

    private void Jbtn_quitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Jbtn_quitarActionPerformed
        // TODO add your handling code here:

        if (tabla_orden.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecciona una fila.. ", "Error", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int sel = tabla_orden.getSelectedRow();

            String dato_eliminar = (String) this.tabla_orden.getValueAt(sel, 1).toString();
            int seleccion = JOptionPane.showOptionDialog(this, "¿ Quitar el elemento: " + dato_eliminar + " ?", "Confirme eliminacion", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Si", "No"}, "No");

            if ((seleccion + 1) == 1) {
                DefaultTableModel temp = (DefaultTableModel) tabla_orden.getModel();
                temp.removeRow(tabla_orden.getSelectedRow());

            }
        }


    }//GEN-LAST:event_Jbtn_quitarActionPerformed

    private void Jbtn_sumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Jbtn_sumaActionPerformed
        // TODO add your handling code here:
        if (tabla_orden.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecciona una fila.. ", "Error", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int sel = tabla_orden.getSelectedRow();
            int cantidad = Integer.parseInt(this.tabla_orden.getValueAt(sel, 0).toString());
            // float importe = Float.parseFloat(this.tabla_venta.getValueAt(fila_sel_venta, 4).toString());
            //  float precio = Float.parseFloat(this.tabla_orden.getValueAt(sel, 2).toString());

            if (cantidad == 999) {
                JOptionPane.showMessageDialog(this, " o.O ", "Advertencia", JOptionPane.WARNING_MESSAGE);
            } else {
                cantidad = cantidad + 1;
                //importe = precio * cantidad;

                tabla_orden.setValueAt(cantidad, sel, 0);

            }

        }

    }//GEN-LAST:event_Jbtn_sumaActionPerformed

    private void Jbtn_restaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Jbtn_restaActionPerformed
        // TODO add your handling code here:
        if (tabla_orden.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecciona una fila.. ", "Error", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int sel = tabla_orden.getSelectedRow();
            int cantidad = Integer.parseInt(this.tabla_orden.getValueAt(sel, 0).toString());
            // float importe = Float.parseFloat(this.tabla_venta.getValueAt(fila_sel_venta, 4).toString());
            //  float precio = Float.parseFloat(this.tabla_orden.getValueAt(sel, 2).toString());

            if (cantidad == 1) {
                JOptionPane.showMessageDialog(this, " o.O ", "Advertencia", JOptionPane.WARNING_MESSAGE);
            } else {
                cantidad = cantidad - 1;
                //importe = precio * cantidad;

                tabla_orden.setValueAt(cantidad, sel, 0);
            }

        }

    }//GEN-LAST:event_Jbtn_restaActionPerformed

    private void Jbtn_llenar_tablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Jbtn_llenar_tablaActionPerformed
        // TODO add your handling code here:
        formato_tabla_venta();
        Jbtn_llenar_tabla.setEnabled(false);
        llenar_tabla();
    }//GEN-LAST:event_Jbtn_llenar_tablaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mandar_nueva_orden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mandar_nueva_orden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mandar_nueva_orden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mandar_nueva_orden.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                mandar_nueva_orden dialog = new mandar_nueva_orden(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    @SuppressWarnings("empty-statement")

    public void llenar_tabla() {
        String aux1="",aux2="",aux3="",aux4="",aux5="";
        int filas = principal.tabla_venta.getRowCount();

        System.out.println("filas: " + filas);

        for (int i = 0; i < filas; i++) {
            
            if (principal.tabla_venta.getValueAt(i, 5) != null) {
                aux4 = (String) principal.tabla_venta.getValueAt(i, 5).toString();
                
            } 
            if (principal.tabla_venta.getValueAt(i, 6) != null) {
                aux5 = (String) principal.tabla_venta.getValueAt(i, 6).toString();
                
            } 
            
            aux1=String.valueOf(principal.tabla_venta.getValueAt(i, 1).toString());
            aux2=String.valueOf(principal.tabla_venta.getValueAt(i, 2).toString());
            aux3=String.valueOf(principal.tabla_venta.getValueAt(i, 3).toString());
            
            
            
            System.out.println("aux1: "+aux1);
            System.out.println("aux2: "+aux2);
            System.out.println("aux3: "+aux3);
            System.out.println("aux4: "+aux4);
            System.out.println("aux5: "+aux5);

            //Object dato[] = {principal.tabla_venta.getValueAt(i, 1).toString(), principal.tabla_venta.getValueAt(i, 2).toString(), principal.tabla_venta.getValueAt(i, 3).toString(),principal.tabla_venta.getValueAt(i, 5).toString(),principal.tabla_venta.getValueAt(i, 6).toString()};
            Object dato[] = {aux1,aux2,aux3,aux4,aux5};

            
            DefaultTableModel temp = (DefaultTableModel) tabla_orden.getModel();
            temp.addRow(dato);

        }

    }

    public void conectar() {
        // conexion.setIp(IpServer);
        conexion.conectate();
    }

    public void formato_tabla_venta() {
        String[] columnNames = {"Cant", "Descripcion", "Precio","Nota1","Nota2"};
        Object[][] data = {{"", "", "","",""}};
        DefaultTableModel TableModel = new DefaultTableModel(data, columnNames);
        tabla_orden.setModel(TableModel);

        int[] anchos = {90, 200, 100,100,100};
        for (int inn = 0; inn < tabla_orden.getColumnCount(); inn++) {
            tabla_orden.getColumnModel().getColumn(inn).setPreferredWidth(anchos[inn]);
        }

        try {
            DefaultTableModel temp = (DefaultTableModel) tabla_orden.getModel();
            temp.removeRow(temp.getRowCount() - 1);
        } catch (ArrayIndexOutOfBoundsException e) {
            ;
        }
       
        tabla_orden.getColumnModel().getColumn(3).setMaxWidth(0);
        tabla_orden.getColumnModel().getColumn(3).setMinWidth(0);
        tabla_orden.getColumnModel().getColumn(3).setPreferredWidth(0);

        tabla_orden.getColumnModel().getColumn(4).setMaxWidth(0);
        tabla_orden.getColumnModel().getColumn(4).setMinWidth(0);
        tabla_orden.getColumnModel().getColumn(4).setPreferredWidth(0);

    }

    public void compara_arreglos() {
        //////////////////////////////////////////////////////compara arreglo 1 con 2
        int valor1, valor2;
        String campo1 = null, campo2 = null, campo3 = null,campo4=null,campo5=null, control = "null";

        valor1 = principal.array.length;
        valor2 = principal.array2.length;

        System.out.println("valor arreglo 1:" + valor1);
        System.out.println("valor arreglo 2:" + valor2);

        String[][] dtconduc3 = new String[valor2][5];

        if (valor1 == valor2) {
            System.out.println("entramos 1° nivel");

            for (int i = 0; i < valor1; i++) {

                System.out.println("valor de la cantidad arreglo1 " + principal.array[i][0].toString());
                int cantidad1 = Integer.parseInt(principal.array[i][0].toString());
                System.out.println("valor de la cantidad arreglo2 " + principal.array2[i][0].toString());
                int cantidad2 = Integer.parseInt(principal.array2[i][0].toString());

                if (cantidad1 != cantidad2) {

                    System.out.println("entramos al if");
                    int valornuevo = Integer.parseInt(principal.array2[i][0].toString()) - Integer.parseInt(principal.array[i][0].toString());

                    dtconduc3[i][0] = Integer.toString(valornuevo);
                    System.out.println("Datos agregados:" + dtconduc3[i][0]);

                    dtconduc3[i][1] = principal.array2[i][1].toString();
                    System.out.println("Datos agregados:" + dtconduc3[i][1]);

                    dtconduc3[i][2] = principal.array2[i][2].toString();
                    System.out.println("Datos agregados" + principal.array2[i][2]);
                    
                    dtconduc3[i][3] = principal.array2[i][3].toString();
                    System.out.println("Datos agregados" + principal.array2[i][3]);
                    
                    dtconduc3[i][4] = principal.array2[i][4].toString();
                    System.out.println("Datos agregados" + principal.array2[i][4]);
                } else {

                    dtconduc3[i][0] = "NADA";
                    dtconduc3[i][1] = "NADA";
                    dtconduc3[i][2] = "NADA";
                    dtconduc3[i][3] = "NADA";
                    dtconduc3[i][4] = "NADA";
                    

                }
            }

        } else if (valor1 > valor2) {
            System.out.println("entramos 2° nivel");
            for (int i = 0; i < valor2; i++) {
                System.out.println("valor" + i);

                if (!principal.array[i][0].equals(principal.array2[i][0])) {
                    int valornuevo = Integer.parseInt(principal.array2[i][0].toString()) - Integer.parseInt(principal.array[i][0].toString());
                    dtconduc3[i][0] = Integer.toString(valornuevo);
                    dtconduc3[i][1] = principal.array2[i][1].toString();
                    dtconduc3[i][2] = principal.array2[i][2].toString();
                   dtconduc3[i][3] = principal.array2[i][3].toString();
                    dtconduc3[i][4] = principal.array2[i][4].toString();

                } else {

                    dtconduc3[i][0] = "NADA";
                    dtconduc3[i][1] = "NADA";
                    dtconduc3[i][2] = "NADA";
                    dtconduc3[i][3] = "NADA";
                    dtconduc3[i][4] = "NADA";

                }
            }

        } else if (valor1 == 0) {
            System.out.println("entramos 3° nivel");
            System.out.println("array2: "+principal.array2[0][2].toString());
            for (int i = 0; i < valor2; i++) {
                dtconduc3[i][0] = principal.array2[i][0].toString();
                dtconduc3[i][1] = principal.array2[i][1].toString();
                dtconduc3[i][2] = principal.array2[i][2].toString();
                
                dtconduc3[i][3] = principal.array2[i][3].toString();
                dtconduc3[i][4] = principal.array2[i][4].toString();
            }

        } else if (valor2 > valor1) {
            System.out.println("entramos 4° nivel");
            for (int i = 0; i < valor1; i++) {
                if (!principal.array[i][0].equals(principal.array2[i][0])) {
                    Integer valornuevo = Integer.parseInt(principal.array2[i][0].toString()) - Integer.parseInt(principal.array[i][0].toString());
                    dtconduc3[i][0] = Integer.toString(valornuevo);
                    dtconduc3[i][1] = principal.array2[i][1].toString();
                    dtconduc3[i][2] = principal.array2[i][2].toString();
                    dtconduc3[i][3] = principal.array2[i][3].toString();
                    dtconduc3[i][4] = principal.array2[i][4].toString();

                } else {
                    dtconduc3[i][0] = "NADA";
                    dtconduc3[i][1] = "NADA";
                    dtconduc3[i][2] = "NADA";
                    dtconduc3[i][3] = "NADA";
                    dtconduc3[i][4] = "NADA";
                }
            }

            for (int i = valor1; i < valor2; i++) {
                dtconduc3[i][0] = principal.array2[i][0];
                dtconduc3[i][1] = principal.array2[i][1];
                dtconduc3[i][2] = principal.array2[i][2];
                dtconduc3[i][3] = principal.array2[i][3];
                dtconduc3[i][4] = principal.array2[i][4];
            }
        }

        for (int j = 0; j < dtconduc3.length; j++) {

            System.out.println("Datos final:" + dtconduc3[j][0]);
            System.out.println("Datos final:" + dtconduc3[j][1]);
            System.out.println("Datos final:" + dtconduc3[j][2]);
            System.out.println("Datos final:" + dtconduc3[j][3]);
            System.out.println("Datos final:" + dtconduc3[j][4]);
            
            control = String.valueOf(dtconduc3[j][0].toString());
            System.out.println("control:" + control);

            if (!dtconduc3[j][0].toString().equals("NADA")) {

                /*if (control.contains("-")) {
                    dtconduc3[j][0] = dtconduc3[j][0].replace("-", "CANCELO ");
                }*/
                campo1 = dtconduc3[j][0].toString();
                campo2 = dtconduc3[j][1].toString();
                campo3 = dtconduc3[j][2].toString();
                campo4 = dtconduc3[j][3].toString();
                campo5 = dtconduc3[j][4].toString();

                DefaultTableModel temp = (DefaultTableModel) tabla_orden.getModel();
                Object nuevo1[] = {campo1, campo2, campo3, campo4, campo5};
                temp.addRow(nuevo1);

            }

        }

    }
    public void mandar_ticket(){
            String articuloT = "";
            int filas = tabla_orden.getRowCount();

            for (int ib = 0; ib < filas; ib++) {
                String ar = (String) tabla_orden.getValueAt(ib, 1);
                String cant = (String) tabla_orden.getValueAt(ib, 0).toString();
                String precio = (String) tabla_orden.getValueAt(ib, 2);
                String nota1 = (String) tabla_orden.getValueAt(ib, 3);
                String nota2 = (String) tabla_orden.getValueAt(ib, 4);
                System.out.println("nota1: "+nota1);
                System.out.println("nota2: "+nota2);
                 if (cant.contains("-")) {
                    cant = cant.replace("-", "CANCELO ");
                }
                if (cant.length() == 1) {
                    cant = " " + cant;
                }
                if (precio.length() == 1) {
                    precio = "   " + precio;
                }
                if (precio.length() == 2) {
                    precio = "  " + precio;
                }
                if (precio.length() == 3) {
                    precio = " " + precio;
                }

                if (ar.length() >= 18) {
                    articuloT = articuloT + "\n" + cant + " " + ar.substring(0, 18);
                }
                if (ar.length() < 18) {
                    ar = String.format("%1$-18s", ar);
                    articuloT = articuloT + "\n" + cant + " " + ar;
                }
                if(!nota1.equals("")){
                    if (nota1.length() < 18) {
                    nota1 = String.format("%1$-18s", nota1);
                    articuloT = articuloT + "\n" +"-"+nota1;
                    }
                }
                if(!nota2.equals("")){
                    if (nota2.length() < 18) {
                    nota1 = String.format("%1$-18s", nota2);
                    articuloT = articuloT + "\n" +"-"+nota2;
                    }
                }
                        
                
                
                
            }

            hora_sistema();
            fecha_sistema();
                vaucher2.generar_ticket(fecha_sistema, hora_sistema, articuloT, principal.lbl_mesa.getText().toString() ,principal.lbl_nombre_atiende.getText().toString(),principal.lbl_nombre_cliente.getText(),principal.id_venta_global);
                vaucher2.print();
            
    
    }
    public void hora_sistema() {
        Calendar fecha = Calendar.getInstance();
        hora_sistema = fecha.get(Calendar.HOUR_OF_DAY) + ":" + fecha.get(Calendar.MINUTE);
    }
    public void fecha_sistema() {
        Calendar fecha = Calendar.getInstance();
        String mes = Integer.toString(fecha.get(Calendar.MONTH) + 1);
        String dia = Integer.toString(fecha.get(Calendar.DATE));
        String auxMes = null, auxDia = null;

        if (mes.length() == 1) {
            auxMes = "0" + mes;
            fecha_sistema = fecha.get(Calendar.DATE) + "/" + auxMes + "/" + fecha.get(Calendar.YEAR);

            if (dia.length() == 1) {
                auxDia = "0" + dia;
                fecha_sistema = auxDia + "/" + auxMes + "/" + fecha.get(Calendar.YEAR);

            }

        } else {
            fecha_sistema = fecha.get(Calendar.DATE) + "/" + (fecha.get(Calendar.MONTH) + 1) + "/" + fecha.get(Calendar.YEAR);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Jbtn_generar_ticket;
    private javax.swing.JButton Jbtn_llenar_tabla;
    private javax.swing.JButton Jbtn_quitar;
    private javax.swing.JButton Jbtn_resta;
    private javax.swing.JButton Jbtn_suma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JTable tabla_orden;
    // End of variables declaration//GEN-END:variables
}
